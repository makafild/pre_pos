<?xml version="1.0" encoding="UTF-8"?>

<project name="radApi" default="build">

    <property name="build-dir" value="${basedir}/build" />
    <property name="toolsdir" value="/usr/local/bin/" />

    <target name="build" depends="prepare,lint,phploc-ci,pdepend,phpmd-ci,phpcs-ci,phpcpd-ci,phpunit,phpdox"/>

    <fileset id="php-files" dir="${basedir}">
        <include name="**/*.php"/>
        <exclude name="vendor/**"/>
        <exclude name="tests/**"/>
        <exclude name="build/**"/>
    </fileset>

    <target name="tools-parallel" description="Run tools in parallel">
        <parallel threadCount="2">
            <sequential>
                <antcall target="prepare"/>
                <antcall target="pdepend"/>
                <antcall target="phpmd-ci"/>
            </sequential>
            <antcall target="phpcpd"/>
            <antcall target="phpcs-ci"/>
            <antcall target="phploc"/>
            <antcall target="phpdox"/>
            <antcall target="phpunit"/>
        </parallel>
    </target>

    <target name="build-parallel"
            depends="prepare,lint,tools-parallel,phpunit"/>


    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${basedir}/build/api"/>
        <delete dir="${basedir}/build/code-browser"/>
        <delete dir="${basedir}/build/coverage"/>
        <delete dir="${basedir}/spod_fanapium"/>
        <delete dir="${basedir}/vendor"/>
        <delete dir="${basedir}/build/logs"/>
        <delete dir="${basedir}/build/pdepend"/>
    </target>

    <target name="prepare" depends="clean" description="Prepare for build">
        <mkdir dir="${basedir}/build/api"/>
        <mkdir dir="${basedir}/build/code-browser"/>
        <mkdir dir="${basedir}/build/coverage"/>
        <mkdir dir="${basedir}/build/logs"/>
        <mkdir dir="${basedir}/build/pdepend"/>
        <mkdir dir="${basedir}/build/phpdox"/>
    </target>

    <target name="lint" description="Perform syntax check of sourcecode files">
        <apply executable="php" failonerror="true">
            <arg value="-l" />
            <fileset dir="${basedir}">
                <include name="**/*.php" />
                <exclude name="vendor/**"/>
                <exclude name="tests/**"/>
                <modified />
            </fileset>
        </apply>
    </target>

    <target name="phploc" description="Measure project size using PHPLOC">
        <exec executable="phploc">
            <arg value="--log-csv" />
            <arg value="${basedir}/build/logs/phploc.csv" />
            <arg path="${basedir}" />
            <arg path="${basedir}/tests"/>
        </exec>
    </target>

    <target name="phploc-ci" depends="prepare"
            description="Measure project size using PHPLOC and log result in CSV and XML format">
        <exec executable="${basedir}/build/tools/phploc.phar" taskname="phploc">
            <arg value="--count-tests"/>
            <arg value="--log-csv"/>
            <arg path="${basedir}/build/logs/phploc.csv"/>
            <arg value="--log-xml"/>
            <arg path="${basedir}/build/logs/phploc.xml"/>
            <arg path="${basedir}"/>
            <arg path="${basedir}/tests"/>
        </exec>
    </target>

    <target name="pdepend" description="Calculate software metrics using PHP_Depend">
        <exec executable="pdepend">
            <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
            <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
            <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
            <arg value="--ignore=vendor,build,tests" />
            <arg path="${basedir}" />
        </exec>
    </target>

    <target name="phpmd"
            description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${basedir}/build/tools/phpmd.phar">
            <arg path="${basedir}" />
            <arg value="text" />
            <arg value="${basedir}/build/phpmd.xml" />
        </exec>
    </target>

    <target name="phpmd-ci" description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
        <exec executable="${basedir}/build/tools/phpmd.phar">
            <arg path="${basedir}" />
            <arg value="xml" />
            <arg value="${basedir}/build/phpmd.xml" />
            <arg value="--reportfile" />
            <arg value="${basedir}/build/logs/pmd.xml" />
            <arg value="--exclude" />
            <arg value="vendor,tests" />
        </exec>
    </target>

    <target name="phpcs"
            description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
        <exec executable="${toolsdir}phpcs">
            <arg value="--standard=PSR2" />
            <arg value="--extensions=php" />
            <arg value="--ignore=autoload.php" />
            <arg path="${basedir}" />
        </exec>
    </target>


    <target name="phpcs-ci" depends="prepare" description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.">
        <exec executable="phpcs" taskname="phpcs">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
            <arg value="--standard=${basedir}/build/phpcs.xml" />
            <arg value="--extensions=php" />
            <arg value="--ignore=autoload.php,vendor,build,tests" />
            <arg path="${basedir}" />
        </exec>
    </target>



    <target name="phpcpd" description="repeat yourself is killing you">
        <exec executable="phpcpd">
            <arg line="--log-pmd ${basedir}/build/logs/pmd-cpd.xml
            --exclude ${basedir}/vendor
            --exclude ${basedir}/build
            --exclude ${basedir}/tests
            ${basedir}" />
        </exec>
    </target>

    <target name="phpcpd-ci" depends="prepare"
            description="Find duplicate code using PHPCPD and log result in XML format">
        <exec executable="${basedir}/build/tools/phpcpd.phar" taskname="phpcpd">
            <arg value="--log-pmd"/>
            <arg path="${basedir}/build/logs/pmd-cpd.xml"/>
            <arg path="${basedir}"/>
        </exec>
    </target>


    <target name="phpdox" unless="phpdox.done" depends="phpcs-ci,phpmd-ci" description="Generate project documentation using phpDox">
        <exec executable="${basedir}/build/tools/phpdox.phar" dir="${basedir}/build" taskname="phpdox">
            <arg value="--file"/>
            <arg path="${basedir}/phpdox.xml"/>
        </exec>
        <property name="phpdox.done" value="true"/>
    </target>




    <target name="phpunit" description="Run unit tests with PHPUnit">
        <exec executable="${basedir}/build/tools/phpunit.phar" >
            <arg value="-c" />
            <arg value="${basedir}/phpunit.xml.dist" />
            <arg value="--coverage-html" />
            <arg value="${build-dir}/coverage" />
            <arg value="--coverage-clover" />
            <arg value="${build-dir}/logs/clover.xml" />
            <arg value="--coverage-crap4j" />
            <arg value="${build-dir}/logs/crap4j.xml" />
            <arg value="--log-junit" />
            <arg value="${build-dir}/logs/junit.xml" />
        </exec>
    </target>



</project>